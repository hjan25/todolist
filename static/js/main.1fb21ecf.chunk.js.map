{"version":3,"sources":["components/TodoTemplete.js","components/TodoInsert.js","components/TodoListItem.js","components/TodoList.js","App.js","index.js"],"names":["TodoTempleteBlock","styled","div","TodoTemplete","children","className","FormBlock","TodoInsert","onInsert","inputEl","useRef","useState","value","setValue","onChange","useCallback","e","target","onSubmit","preventDefault","current","focus","type","placeholder","ref","TodoListItemBlock","TodoListItem","todo","onRemove","onToggle","id","text","checked","onClick","cn","TodoListBlock","TodoList","todos","map","data","App","setTodos","concat","localStorage","abc","JSON","stringify","nextid","filter","useEffect","parse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gdAGA,IAAMA,EAAoBC,IAAOC,IAAV,KAsBRC,EAXM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpB,OACI,eAACJ,EAAD,WACI,qBAAKK,UAAU,QAAf,uCACA,qBAAKA,UAAU,UAAf,SACKD,Q,wnBCfjB,IAAME,EAAYL,IAAOC,IAAV,KA6CAK,EA3BI,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACXC,EAAUC,iBAAO,MADQ,EAELC,mBAAS,IAFJ,mBAExBC,EAFwB,KAEjBC,EAFiB,KAGzBC,EAAWC,uBACb,SAACC,GACGH,EAASG,EAAEC,OAAOL,SACnB,CAACA,IAEFM,EAAWH,uBACb,SAACC,GACGR,EAASI,GACTC,EAAS,IACTG,EAAEG,iBACFV,EAAQW,QAAQC,UACjB,CAACb,EAAUI,IAGlB,OACI,cAACN,EAAD,UACI,uBAAMD,UAAU,OAAOa,SAAUA,EAAjC,UACI,uBAAOI,KAAK,OAAOC,YAAY,sDAAcX,MAAOA,EAAOE,SAAUA,EAAUU,IAAKf,IACpF,wBAAQa,KAAK,SAAb,SAAsB,cAAC,IAAD,Y,2tBCrCtC,IAAMG,EAAoBxB,IAAOC,IAAV,KA4CRwB,EAvBM,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SAS5BC,EAAqBH,EAArBG,GAAIC,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,QACjB,OACI,eAACP,EAAD,WACI,sBAAKpB,UAAU,WAAW4B,QAAU,kBAAMJ,EAASC,IAAnD,UACME,EAAU,cAAC,IAAD,IAAwB,cAAC,IAAD,IACpC,qBAAK3B,UAAW6B,IAAG,OAAQ,CAACF,YAA5B,SAAwCD,OAE5C,qBAAK1B,UAAU,SAAS4B,QAAS,kBAAML,EAASE,IAAhD,SACI,cAAC,IAAD,U,qKCxChB,IAAMK,EAAgBlC,IAAOC,IAAV,KAmBJkC,EAZE,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,MAAOT,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SAChC,OACI,cAACM,EAAD,UAEQE,EAAMC,KAAK,SAACC,GAAD,OACP,cAAC,EAAD,CAA4BZ,KAAMY,EAAMX,SAAUA,EAAUC,SAAUA,GAAnDU,EAAKT,UCwC7BU,EAnDH,WAAO,IAAD,EACU7B,mBAAS,IADnB,mBACT0B,EADS,KACFI,EADE,KAGVX,EAAKpB,iBAAO,GAEZF,EAAWO,uBACf,SAACgB,GAEC,IAAMJ,EAAO,CAACG,GAAIA,EAAGV,QAASW,KAAMA,EAAMC,SAAQ,GAClDS,EAASJ,EAAMK,OAAOf,IACtBgB,aAAaC,IAAMC,KAAKC,UAAUT,EAAMK,OAAOf,IAC/CG,EAAGV,SAAW,EACduB,aAAaI,OAASF,KAAKC,UAAUhB,EAAGV,WACvC,CAACiB,IAGAT,EAAWb,uBACf,SAACe,GACCW,EAASJ,EAAMW,QAAQ,SAAAT,GAAI,OAAIA,EAAKT,KAAOA,MAE3Ca,aAAaC,IAAMC,KAAKC,UAAUT,EAAMW,QAAQ,SAAAT,GAAI,OAAIA,EAAKT,KAAOA,QACnE,CAACO,IAGAR,EAAWd,uBACf,SAACe,GACCW,EAASJ,EAAMC,KAAK,SAAAC,GAAI,OAAIA,EAAKT,KAAOA,EAAZ,2BAAsBS,GAAtB,IAA4BP,SAASO,EAAKP,UAAYO,MAClFI,aAAaC,IAAMC,KAAKC,UAAUT,EAAMC,KAAK,SAAAC,GAAI,OAAIA,EAAKT,KAAOA,EAAZ,2BAAsBS,GAAtB,IAA4BP,SAASO,EAAKP,UAAYO,QAC1G,CAACF,IAeN,OAZAY,qBACE,WACE,IAAML,EAAMD,aAAaC,IACnBG,EAASJ,aAAaI,OACzBH,IACDH,GAAU,SAAAJ,GAAK,OAAIA,EAAMK,OAAOG,KAAKK,MAAMN,OAC3Cd,EAAGV,QAAUyB,KAAKK,MAAMH,MAGzB,IAIH,eAAC,EAAD,WACE,cAAC,EAAD,CAAYvC,SAAUA,IACtB,cAAC,EAAD,CAAU6B,MAAOA,EAAOT,SAAUA,EAAUC,SAAUA,QC9C5DsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1fb21ecf.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TodoTempleteBlock = styled.div`\r\n    width: 512px; margin: 50px auto 0;\r\n    .title {\r\n        background: #22b8cf;\r\n        color: #fff;\r\n        padding: 10px;\r\n        font-size: 20px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst TodoTemplete = ({ children }) => {\r\n    return (\r\n        <TodoTempleteBlock>\r\n            <div className=\"title\">일정 관리</div>\r\n            <div className=\"content\">\r\n                {children}\r\n            </div>\r\n        </TodoTempleteBlock>\r\n    );\r\n};\r\n\r\nexport default TodoTemplete;","import React, { useRef, useCallback, useState } from 'react';\r\nimport { AiOutlinePlus } from 'react-icons/ai';\r\nimport styled from 'styled-components';\r\n\r\nconst FormBlock = styled.div`\r\n    .form { background: #495057;\r\n        display: flex;\r\n        input { flex: 1; border: none;\r\n            background: none; padding: 16px 10px 14px;\r\n            font-size: 18px; color: #dee2e6;\r\n            &::placeholder { color: #dee2e6;}\r\n        }\r\n        button { background: #868e96; border: none;\r\n            outline: none; padding: 15px 10px;\r\n            font-size: 20px; cursor: pointer;\r\n            transition: all 0.1s;\r\n            display: flex; align-items: center;\r\n            &:hover { background: #adb5bd;}\r\n        }\r\n    }\r\n`;\r\n\r\nconst TodoInsert = ({onInsert}) => {\r\n    const inputEl = useRef(null);\r\n    const [value, setValue] = useState('');\r\n    const onChange = useCallback(\r\n        (e) => {\r\n            setValue(e.target.value);\r\n        }, [value]\r\n    );\r\n    const onSubmit = useCallback(\r\n        (e) => {\r\n            onInsert(value);\r\n            setValue('');\r\n            e.preventDefault();\r\n            inputEl.current.focus();\r\n        }, [onInsert, value]\r\n    );\r\n\r\n    return (\r\n        <FormBlock>\r\n            <form className=\"form\" onSubmit={onSubmit}>\r\n                <input type=\"text\" placeholder=\"할 일을 입력하세요.\" value={value} onChange={onChange} ref={inputEl} />\r\n                <button type=\"submit\"><AiOutlinePlus /></button>\r\n            </form>\r\n        </FormBlock>\r\n    );\r\n};\r\n\r\nexport default TodoInsert;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {ImCheckboxChecked, ImCheckboxUnchecked} from 'react-icons/im';\r\nimport {MdRemoveCircleOutline} from 'react-icons/md';\r\nimport cn from 'classnames';\r\n\r\nconst TodoListItemBlock = styled.div`\r\n    display: flex;\r\n    font-size: 18px; color: #333;\r\n    padding: 15px 10px;\r\n    background: #f0f0f0;\r\n    &:nth-child(even) { background: #f8f9fa;}\r\n    &+& { border-top: 1px solid #dee2e6;}\r\n    .checkbox { flex: 1;\r\n        display: flex; align-items: center; cursor: pointer;\r\n        .text { flex: 1; padding-left: 5px;\r\n            &.checked { text-decoration: line-through; color: #f00;}\r\n        }\r\n    }\r\n    .remove { color: #ff8787; cursor: pointer;\r\n        display: flex; align-items: center;\r\n        padding-left: 10px; font-size: 20px;\r\n        transition: all 0.2s;\r\n        &:hover { color: #f00;}\r\n    }\r\n`;\r\n\r\nconst TodoListItem = ({todo, onRemove, onToggle}) => {\r\n    // const [toggle, setToggle] = useState(false);\r\n    // const [on, setOn] = useState(false);\r\n    // const onToggle = useCallback(\r\n    //     () => {\r\n    //         setToggle(!toggle);\r\n    //         setOn(!on);\r\n    //     }, [toggle, on]\r\n    // );\r\n    const {id, text, checked} = todo;\r\n    return (\r\n        <TodoListItemBlock>\r\n            <div className=\"checkbox\" onClick={ () => onToggle(id)}>\r\n                { checked ? <ImCheckboxChecked /> : <ImCheckboxUnchecked />}\r\n                <div className={cn(\"text\", {checked})}>{text}</div>\r\n            </div>\r\n            <div className=\"remove\" onClick={() => onRemove(id)}>\r\n                <MdRemoveCircleOutline />\r\n            </div>\r\n        </TodoListItemBlock>\r\n    );\r\n};\r\n\r\nexport default TodoListItem;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport TodoListItem from './TodoListItem';\r\n\r\nconst TodoListBlock = styled.div`\r\n    min-height: 320px;\r\n    max-height: 513px;\r\n    overflow-y: auto;\r\n    background: #fff;\r\n`;\r\n\r\nconst TodoList = ({todos, onRemove, onToggle}) => {\r\n    return (\r\n        <TodoListBlock>\r\n            {\r\n                todos.map( (data) => (\r\n                    <TodoListItem key={data.id} todo={data} onRemove={onRemove} onToggle={onToggle} />\r\n                ) )\r\n            }\r\n        </TodoListBlock>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport TodoTemplete from './components/TodoTemplete';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  \n  const id = useRef(1); // 삭제를 위해서는 클릭한 배열 아이템을 구분할 수 있는 고유 id가 필요함.\n  \n  const onInsert = useCallback(\n    (text) => {\n      // useRef로 만든 객체에 접근하기 위해서는 항상 .current를 붙여줘야함.\n      const todo = {id: id.current, text: text, checked:false};\n      setTodos(todos.concat(todo));\n      localStorage.abc = JSON.stringify(todos.concat(todo));\n      id.current += 1;\n      localStorage.nextid = JSON.stringify(id.current);\n    }, [todos]\n  );\n\n  const onRemove = useCallback(\n    (id) => {\n      setTodos(todos.filter( data => data.id !== id ));\n      // 클릭한 id와 같지 않은 것만 남게 되고 같은 것은 삭제됨.\n      localStorage.abc = JSON.stringify(todos.filter( data => data.id !== id ));\n    }, [todos]\n  );\n\n  const onToggle = useCallback(\n    (id) => {\n      setTodos(todos.map( data => data.id === id ? { ...data, checked:!data.checked } : data ));\n      localStorage.abc = JSON.stringify(todos.map( data => data.id === id ? { ...data, checked:!data.checked } : data ));\n    }, [todos]\n  );\n\n  useEffect(\n    () => {\n      const abc = localStorage.abc;\n      const nextid = localStorage.nextid;\n      if(abc) {\n        setTodos( todos => todos.concat(JSON.parse(abc)));\n        id.current = JSON.parse(nextid);\n        // JSON.parse() : 문자 -> 객체\n      }\n    }, []\n  );\n\n  return (\n    <TodoTemplete>\n      <TodoInsert onInsert={onInsert} />\n      <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle} />\n    </TodoTemplete>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}